// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: sssupsf.proto

#include "sssupsf.pb.h"
#include "sssupsf.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace bbf {
namespace sss {

static const char* sssUpsf_method_names[] = {
  "/bbf.sss.sssUpsf/Subscribe",
  "/bbf.sss.sssUpsf/UpdateShard",
  "/bbf.sss.sssUpsf/DeleteShard",
  "/bbf.sss.sssUpsf/GetShard",
  "/bbf.sss.sssUpsf/ListShards",
  "/bbf.sss.sssUpsf/UpdateTrafficSteeringFunction",
  "/bbf.sss.sssUpsf/DeleteTrafficSteeringFunction",
  "/bbf.sss.sssUpsf/GetTrafficSteeringFunction",
  "/bbf.sss.sssUpsf/ListTrafficSteeringFunctions",
  "/bbf.sss.sssUpsf/UpdateServiceGatewayUserPlane",
  "/bbf.sss.sssUpsf/DeleteServiceGatewayUserPlane",
  "/bbf.sss.sssUpsf/GetServiceGatewayUserPlane",
  "/bbf.sss.sssUpsf/ListServiceGatewayUserPlanes",
  "/bbf.sss.sssUpsf/UpdateNetworkConnection",
  "/bbf.sss.sssUpsf/DeleteNetworkConnection",
  "/bbf.sss.sssUpsf/GetNetworkConnection",
  "/bbf.sss.sssUpsf/ListNetworkConnections",
  "/bbf.sss.sssUpsf/UpdateServiceGateway",
  "/bbf.sss.sssUpsf/DeleteServiceGateway",
  "/bbf.sss.sssUpsf/GetServiceGateway",
  "/bbf.sss.sssUpsf/ListServiceGateways",
  "/bbf.sss.sssUpsf/UpdateSessionContext",
  "/bbf.sss.sssUpsf/DeleteSessionContext",
  "/bbf.sss.sssUpsf/GetSessionContext",
  "/bbf.sss.sssUpsf/ListSessionContexts",
  "/bbf.sss.sssUpsf/Lookup",
};

std::unique_ptr< sssUpsf::Stub> sssUpsf::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< sssUpsf::Stub> stub(new sssUpsf::Stub(channel, options));
  return stub;
}

sssUpsf::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options)
  : channel_(channel), rpcmethod_Subscribe_(sssUpsf_method_names[0], options.suffix_for_stats(),::grpc::internal::RpcMethod::SERVER_STREAMING, channel)
  , rpcmethod_UpdateShard_(sssUpsf_method_names[1], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteShard_(sssUpsf_method_names[2], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetShard_(sssUpsf_method_names[3], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListShards_(sssUpsf_method_names[4], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateTrafficSteeringFunction_(sssUpsf_method_names[5], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteTrafficSteeringFunction_(sssUpsf_method_names[6], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetTrafficSteeringFunction_(sssUpsf_method_names[7], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListTrafficSteeringFunctions_(sssUpsf_method_names[8], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateServiceGatewayUserPlane_(sssUpsf_method_names[9], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteServiceGatewayUserPlane_(sssUpsf_method_names[10], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetServiceGatewayUserPlane_(sssUpsf_method_names[11], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListServiceGatewayUserPlanes_(sssUpsf_method_names[12], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateNetworkConnection_(sssUpsf_method_names[13], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteNetworkConnection_(sssUpsf_method_names[14], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetNetworkConnection_(sssUpsf_method_names[15], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListNetworkConnections_(sssUpsf_method_names[16], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateServiceGateway_(sssUpsf_method_names[17], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteServiceGateway_(sssUpsf_method_names[18], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetServiceGateway_(sssUpsf_method_names[19], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListServiceGateways_(sssUpsf_method_names[20], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_UpdateSessionContext_(sssUpsf_method_names[21], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeleteSessionContext_(sssUpsf_method_names[22], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_GetSessionContext_(sssUpsf_method_names[23], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ListSessionContexts_(sssUpsf_method_names[24], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_Lookup_(sssUpsf_method_names[25], options.suffix_for_stats(),::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::ClientReader< ::bbf::sss::Update>* sssUpsf::Stub::SubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request) {
  return ::grpc::internal::ClientReaderFactory< ::bbf::sss::Update>::Create(channel_.get(), rpcmethod_Subscribe_, context, request);
}

void sssUpsf::Stub::async::Subscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq* request, ::grpc::ClientReadReactor< ::bbf::sss::Update>* reactor) {
  ::grpc::internal::ClientCallbackReaderFactory< ::bbf::sss::Update>::Create(stub_->channel_.get(), stub_->rpcmethod_Subscribe_, context, request, reactor);
}

::grpc::ClientAsyncReader< ::bbf::sss::Update>* sssUpsf::Stub::AsyncSubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq, void* tag) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::bbf::sss::Update>::Create(channel_.get(), cq, rpcmethod_Subscribe_, context, request, true, tag);
}

::grpc::ClientAsyncReader< ::bbf::sss::Update>* sssUpsf::Stub::PrepareAsyncSubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncReaderFactory< ::bbf::sss::Update>::Create(channel_.get(), cq, rpcmethod_Subscribe_, context, request, false, nullptr);
}

::grpc::Status sssUpsf::Stub::UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::bbf::sss::ShardResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateShard_, context, request, response);
}

void sssUpsf::Stub::async::UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateShard_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateShard_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* sssUpsf::Stub::PrepareAsyncUpdateShardRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ShardResp, ::bbf::sss::UpdateShardReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateShard_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* sssUpsf::Stub::AsyncUpdateShardRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateShardRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::bbf::sss::ShardResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteShard_, context, request, response);
}

void sssUpsf::Stub::async::DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteShard_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteShard_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* sssUpsf::Stub::PrepareAsyncDeleteShardRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ShardResp, ::bbf::sss::DeleteShardReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteShard_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* sssUpsf::Stub::AsyncDeleteShardRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteShardRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::bbf::sss::ShardResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetShard_, context, request, response);
}

void sssUpsf::Stub::async::GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetShard_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetShard_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* sssUpsf::Stub::PrepareAsyncGetShardRaw(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ShardResp, ::bbf::sss::GetShardReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetShard_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* sssUpsf::Stub::AsyncGetShardRaw(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetShardRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::bbf::sss::ListShardResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListShards_, context, request, response);
}

void sssUpsf::Stub::async::ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListShards_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListShards_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>* sssUpsf::Stub::PrepareAsyncListShardsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ListShardResp, ::bbf::sss::ListShardReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListShards_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>* sssUpsf::Stub::AsyncListShardsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListShardsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateTrafficSteeringFunction_, context, request, response);
}

void sssUpsf::Stub::async::UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateTrafficSteeringFunction_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateTrafficSteeringFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* sssUpsf::Stub::PrepareAsyncUpdateTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::TrafficSteeringFunctionResp, ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateTrafficSteeringFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* sssUpsf::Stub::AsyncUpdateTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateTrafficSteeringFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteTrafficSteeringFunction_, context, request, response);
}

void sssUpsf::Stub::async::DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteTrafficSteeringFunction_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteTrafficSteeringFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* sssUpsf::Stub::PrepareAsyncDeleteTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::TrafficSteeringFunctionResp, ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteTrafficSteeringFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* sssUpsf::Stub::AsyncDeleteTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteTrafficSteeringFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetTrafficSteeringFunction_, context, request, response);
}

void sssUpsf::Stub::async::GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetTrafficSteeringFunction_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetTrafficSteeringFunction_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* sssUpsf::Stub::PrepareAsyncGetTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::TrafficSteeringFunctionResp, ::bbf::sss::GetTrafficSteeringFunctionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetTrafficSteeringFunction_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* sssUpsf::Stub::AsyncGetTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetTrafficSteeringFunctionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::bbf::sss::ListTrafficSteeringFunctionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListTrafficSteeringFunctions_, context, request, response);
}

void sssUpsf::Stub::async::ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListTrafficSteeringFunctions_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListTrafficSteeringFunctions_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>* sssUpsf::Stub::PrepareAsyncListTrafficSteeringFunctionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ListTrafficSteeringFunctionResp, ::bbf::sss::ListTrafficSteeringFunctionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListTrafficSteeringFunctions_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>* sssUpsf::Stub::AsyncListTrafficSteeringFunctionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListTrafficSteeringFunctionsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateServiceGatewayUserPlane_, context, request, response);
}

void sssUpsf::Stub::async::UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateServiceGatewayUserPlane_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateServiceGatewayUserPlane_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* sssUpsf::Stub::PrepareAsyncUpdateServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ServiceGatewayUserPlaneResp, ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateServiceGatewayUserPlane_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* sssUpsf::Stub::AsyncUpdateServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateServiceGatewayUserPlaneRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteServiceGatewayUserPlane_, context, request, response);
}

void sssUpsf::Stub::async::DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteServiceGatewayUserPlane_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteServiceGatewayUserPlane_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* sssUpsf::Stub::PrepareAsyncDeleteServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ServiceGatewayUserPlaneResp, ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteServiceGatewayUserPlane_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* sssUpsf::Stub::AsyncDeleteServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteServiceGatewayUserPlaneRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetServiceGatewayUserPlane_, context, request, response);
}

void sssUpsf::Stub::async::GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetServiceGatewayUserPlane_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetServiceGatewayUserPlane_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* sssUpsf::Stub::PrepareAsyncGetServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ServiceGatewayUserPlaneResp, ::bbf::sss::GetServiceGatewayUserPlaneReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetServiceGatewayUserPlane_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* sssUpsf::Stub::AsyncGetServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetServiceGatewayUserPlaneRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListServiceGatewayUserPlanes_, context, request, response);
}

void sssUpsf::Stub::async::ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListServiceGatewayUserPlanes_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListServiceGatewayUserPlanes_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>* sssUpsf::Stub::PrepareAsyncListServiceGatewayUserPlanesRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ListServiceGatewayUserPlaneResp, ::bbf::sss::ListServiceGatewayUserPlaneReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListServiceGatewayUserPlanes_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>* sssUpsf::Stub::AsyncListServiceGatewayUserPlanesRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListServiceGatewayUserPlanesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateNetworkConnection_, context, request, response);
}

void sssUpsf::Stub::async::UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNetworkConnection_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateNetworkConnection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* sssUpsf::Stub::PrepareAsyncUpdateNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::NetworkConnectionResp, ::bbf::sss::UpdateNetworkConnectionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateNetworkConnection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* sssUpsf::Stub::AsyncUpdateNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateNetworkConnectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteNetworkConnection_, context, request, response);
}

void sssUpsf::Stub::async::DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNetworkConnection_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteNetworkConnection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* sssUpsf::Stub::PrepareAsyncDeleteNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::NetworkConnectionResp, ::bbf::sss::DeleteNetworkConnectionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteNetworkConnection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* sssUpsf::Stub::AsyncDeleteNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteNetworkConnectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetNetworkConnection_, context, request, response);
}

void sssUpsf::Stub::async::GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNetworkConnection_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetNetworkConnection_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* sssUpsf::Stub::PrepareAsyncGetNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::NetworkConnectionResp, ::bbf::sss::GetNetworkConnectionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetNetworkConnection_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* sssUpsf::Stub::AsyncGetNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetNetworkConnectionRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::bbf::sss::ListNetworkConnectionResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListNetworkConnections_, context, request, response);
}

void sssUpsf::Stub::async::ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNetworkConnections_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListNetworkConnections_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>* sssUpsf::Stub::PrepareAsyncListNetworkConnectionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ListNetworkConnectionResp, ::bbf::sss::ListNetworkConnectionReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListNetworkConnections_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>* sssUpsf::Stub::AsyncListNetworkConnectionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListNetworkConnectionsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateServiceGateway_, context, request, response);
}

void sssUpsf::Stub::async::UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateServiceGateway_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateServiceGateway_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* sssUpsf::Stub::PrepareAsyncUpdateServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ServiceGatewayResp, ::bbf::sss::UpdateServiceGatewayReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateServiceGateway_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* sssUpsf::Stub::AsyncUpdateServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateServiceGatewayRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteServiceGateway_, context, request, response);
}

void sssUpsf::Stub::async::DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteServiceGateway_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteServiceGateway_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* sssUpsf::Stub::PrepareAsyncDeleteServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ServiceGatewayResp, ::bbf::sss::DeleteServiceGatewayReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteServiceGateway_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* sssUpsf::Stub::AsyncDeleteServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteServiceGatewayRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetServiceGateway_, context, request, response);
}

void sssUpsf::Stub::async::GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetServiceGateway_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetServiceGateway_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* sssUpsf::Stub::PrepareAsyncGetServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ServiceGatewayResp, ::bbf::sss::GetServiceGatewayReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetServiceGateway_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* sssUpsf::Stub::AsyncGetServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetServiceGatewayRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::bbf::sss::ListServiceGatewayResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListServiceGateways_, context, request, response);
}

void sssUpsf::Stub::async::ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListServiceGateways_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListServiceGateways_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>* sssUpsf::Stub::PrepareAsyncListServiceGatewaysRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ListServiceGatewayResp, ::bbf::sss::ListServiceGatewayReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListServiceGateways_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>* sssUpsf::Stub::AsyncListServiceGatewaysRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListServiceGatewaysRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::bbf::sss::SessionContextResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_UpdateSessionContext_, context, request, response);
}

void sssUpsf::Stub::async::UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSessionContext_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_UpdateSessionContext_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* sssUpsf::Stub::PrepareAsyncUpdateSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::SessionContextResp, ::bbf::sss::UpdateSessionContextReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_UpdateSessionContext_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* sssUpsf::Stub::AsyncUpdateSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncUpdateSessionContextRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::bbf::sss::SessionContextResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeleteSessionContext_, context, request, response);
}

void sssUpsf::Stub::async::DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSessionContext_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeleteSessionContext_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* sssUpsf::Stub::PrepareAsyncDeleteSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::SessionContextResp, ::bbf::sss::DeleteSessionContextReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeleteSessionContext_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* sssUpsf::Stub::AsyncDeleteSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeleteSessionContextRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::bbf::sss::SessionContextResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_GetSessionContext_, context, request, response);
}

void sssUpsf::Stub::async::GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSessionContext_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_GetSessionContext_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* sssUpsf::Stub::PrepareAsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::SessionContextResp, ::bbf::sss::GetSessionContextReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_GetSessionContext_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* sssUpsf::Stub::AsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncGetSessionContextRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::bbf::sss::ListSessionContextResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ListSessionContexts_, context, request, response);
}

void sssUpsf::Stub::async::ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSessionContexts_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ListSessionContexts_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>* sssUpsf::Stub::PrepareAsyncListSessionContextsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::ListSessionContextResp, ::bbf::sss::ListSessionContextReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ListSessionContexts_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>* sssUpsf::Stub::AsyncListSessionContextsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncListSessionContextsRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status sssUpsf::Stub::Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::bbf::sss::LookupResp* response) {
  return ::grpc::internal::BlockingUnaryCall< ::bbf::sss::LookupReq, ::bbf::sss::LookupResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_Lookup_, context, request, response);
}

void sssUpsf::Stub::async::Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::bbf::sss::LookupReq, ::bbf::sss::LookupResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Lookup_, context, request, response, std::move(f));
}

void sssUpsf::Stub::async::Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response, ::grpc::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_Lookup_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>* sssUpsf::Stub::PrepareAsyncLookupRaw(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::bbf::sss::LookupResp, ::bbf::sss::LookupReq, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_Lookup_, context, request);
}

::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>* sssUpsf::Stub::AsyncLookupRaw(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncLookupRaw(context, request, cq);
  result->StartCall();
  return result;
}

sssUpsf::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[0],
      ::grpc::internal::RpcMethod::SERVER_STREAMING,
      new ::grpc::internal::ServerStreamingHandler< sssUpsf::Service, ::bbf::sss::SubscribeReq, ::bbf::sss::Update>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::SubscribeReq* req,
             ::grpc::ServerWriter<::bbf::sss::Update>* writer) {
               return service->Subscribe(ctx, req, writer);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::UpdateShardReq* req,
             ::bbf::sss::ShardResp* resp) {
               return service->UpdateShard(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::DeleteShardReq* req,
             ::bbf::sss::ShardResp* resp) {
               return service->DeleteShard(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::GetShardReq* req,
             ::bbf::sss::ShardResp* resp) {
               return service->GetShard(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::ListShardReq* req,
             ::bbf::sss::ListShardResp* resp) {
               return service->ListShards(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::UpdateTrafficSteeringFunctionReq* req,
             ::bbf::sss::TrafficSteeringFunctionResp* resp) {
               return service->UpdateTrafficSteeringFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::DeleteTrafficSteeringFunctionReq* req,
             ::bbf::sss::TrafficSteeringFunctionResp* resp) {
               return service->DeleteTrafficSteeringFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[7],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::GetTrafficSteeringFunctionReq* req,
             ::bbf::sss::TrafficSteeringFunctionResp* resp) {
               return service->GetTrafficSteeringFunction(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[8],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::ListTrafficSteeringFunctionReq* req,
             ::bbf::sss::ListTrafficSteeringFunctionResp* resp) {
               return service->ListTrafficSteeringFunctions(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[9],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* req,
             ::bbf::sss::ServiceGatewayUserPlaneResp* resp) {
               return service->UpdateServiceGatewayUserPlane(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[10],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* req,
             ::bbf::sss::ServiceGatewayUserPlaneResp* resp) {
               return service->DeleteServiceGatewayUserPlane(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[11],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::GetServiceGatewayUserPlaneReq* req,
             ::bbf::sss::ServiceGatewayUserPlaneResp* resp) {
               return service->GetServiceGatewayUserPlane(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[12],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::ListServiceGatewayUserPlaneReq* req,
             ::bbf::sss::ListServiceGatewayUserPlaneResp* resp) {
               return service->ListServiceGatewayUserPlanes(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[13],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::UpdateNetworkConnectionReq* req,
             ::bbf::sss::NetworkConnectionResp* resp) {
               return service->UpdateNetworkConnection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[14],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::DeleteNetworkConnectionReq* req,
             ::bbf::sss::NetworkConnectionResp* resp) {
               return service->DeleteNetworkConnection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[15],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::GetNetworkConnectionReq* req,
             ::bbf::sss::NetworkConnectionResp* resp) {
               return service->GetNetworkConnection(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[16],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::ListNetworkConnectionReq* req,
             ::bbf::sss::ListNetworkConnectionResp* resp) {
               return service->ListNetworkConnections(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[17],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::UpdateServiceGatewayReq* req,
             ::bbf::sss::ServiceGatewayResp* resp) {
               return service->UpdateServiceGateway(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[18],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::DeleteServiceGatewayReq* req,
             ::bbf::sss::ServiceGatewayResp* resp) {
               return service->DeleteServiceGateway(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[19],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::GetServiceGatewayReq* req,
             ::bbf::sss::ServiceGatewayResp* resp) {
               return service->GetServiceGateway(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[20],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::ListServiceGatewayReq* req,
             ::bbf::sss::ListServiceGatewayResp* resp) {
               return service->ListServiceGateways(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[21],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::UpdateSessionContextReq* req,
             ::bbf::sss::SessionContextResp* resp) {
               return service->UpdateSessionContext(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[22],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::DeleteSessionContextReq* req,
             ::bbf::sss::SessionContextResp* resp) {
               return service->DeleteSessionContext(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[23],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::GetSessionContextReq* req,
             ::bbf::sss::SessionContextResp* resp) {
               return service->GetSessionContext(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[24],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::ListSessionContextReq* req,
             ::bbf::sss::ListSessionContextResp* resp) {
               return service->ListSessionContexts(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      sssUpsf_method_names[25],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< sssUpsf::Service, ::bbf::sss::LookupReq, ::bbf::sss::LookupResp, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](sssUpsf::Service* service,
             ::grpc::ServerContext* ctx,
             const ::bbf::sss::LookupReq* req,
             ::bbf::sss::LookupResp* resp) {
               return service->Lookup(ctx, req, resp);
             }, this)));
}

sssUpsf::Service::~Service() {
}

::grpc::Status sssUpsf::Service::Subscribe(::grpc::ServerContext* context, const ::bbf::sss::SubscribeReq* request, ::grpc::ServerWriter< ::bbf::sss::Update>* writer) {
  (void) context;
  (void) request;
  (void) writer;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::UpdateShard(::grpc::ServerContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::DeleteShard(::grpc::ServerContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::GetShard(::grpc::ServerContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::ListShards(::grpc::ServerContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::UpdateTrafficSteeringFunction(::grpc::ServerContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::DeleteTrafficSteeringFunction(::grpc::ServerContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::GetTrafficSteeringFunction(::grpc::ServerContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::ListTrafficSteeringFunctions(::grpc::ServerContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::UpdateServiceGatewayUserPlane(::grpc::ServerContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::DeleteServiceGatewayUserPlane(::grpc::ServerContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::GetServiceGatewayUserPlane(::grpc::ServerContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::ListServiceGatewayUserPlanes(::grpc::ServerContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::UpdateNetworkConnection(::grpc::ServerContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::DeleteNetworkConnection(::grpc::ServerContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::GetNetworkConnection(::grpc::ServerContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::ListNetworkConnections(::grpc::ServerContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::UpdateServiceGateway(::grpc::ServerContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::DeleteServiceGateway(::grpc::ServerContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::GetServiceGateway(::grpc::ServerContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::ListServiceGateways(::grpc::ServerContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::UpdateSessionContext(::grpc::ServerContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::DeleteSessionContext(::grpc::ServerContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::GetSessionContext(::grpc::ServerContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::ListSessionContexts(::grpc::ServerContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status sssUpsf::Service::Lookup(::grpc::ServerContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace bbf
}  // namespace sss


// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: sssupsf.proto
// Original file comments:
// Copyright 2021 Vodafone Group
//
// This file is part of UPSFdemo.
//
// UPSFdemo is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// UPSFdemo is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with UPSFdemo.  If not, see <https://www.gnu.org/licenses/>.
//
#ifndef GRPC_sssupsf_2eproto__INCLUDED
#define GRPC_sssupsf_2eproto__INCLUDED

#include "sssupsf.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace bbf {
namespace sss {

// sssUpsf provides a set of services that will be exposed by the UPSF.
// SubscribeSessionContextUpdates
// SubscribeShardUpdates
// UpdateShard
// DeleteShard
class sssUpsf final {
 public:
  static constexpr char const* service_full_name() {
    return "bbf.sss.sssUpsf";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    std::unique_ptr< ::grpc::ClientReaderInterface< ::bbf::sss::Update>> Subscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::bbf::sss::Update>>(SubscribeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::bbf::sss::Update>> AsyncSubscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::bbf::sss::Update>>(AsyncSubscribeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::bbf::sss::Update>> PrepareAsyncSubscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::bbf::sss::Update>>(PrepareAsyncSubscribeRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::bbf::sss::ShardResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>> AsyncUpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>>(AsyncUpdateShardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>> PrepareAsyncUpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>>(PrepareAsyncUpdateShardRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::bbf::sss::ShardResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>> AsyncDeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>>(AsyncDeleteShardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>> PrepareAsyncDeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>>(PrepareAsyncDeleteShardRaw(context, request, cq));
    }
    virtual ::grpc::Status GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::bbf::sss::ShardResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>> AsyncGetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>>(AsyncGetShardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>> PrepareAsyncGetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>>(PrepareAsyncGetShardRaw(context, request, cq));
    }
    virtual ::grpc::Status ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::bbf::sss::ListShardResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListShardResp>> AsyncListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListShardResp>>(AsyncListShardsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListShardResp>> PrepareAsyncListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListShardResp>>(PrepareAsyncListShardsRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>> AsyncUpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>>(AsyncUpdateTrafficSteeringFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>> PrepareAsyncUpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>>(PrepareAsyncUpdateTrafficSteeringFunctionRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>> AsyncDeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>>(AsyncDeleteTrafficSteeringFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>> PrepareAsyncDeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>>(PrepareAsyncDeleteTrafficSteeringFunctionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>> AsyncGetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>>(AsyncGetTrafficSteeringFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>> PrepareAsyncGetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>>(PrepareAsyncGetTrafficSteeringFunctionRaw(context, request, cq));
    }
    virtual ::grpc::Status ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::bbf::sss::ListTrafficSteeringFunctionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListTrafficSteeringFunctionResp>> AsyncListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListTrafficSteeringFunctionResp>>(AsyncListTrafficSteeringFunctionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListTrafficSteeringFunctionResp>> PrepareAsyncListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListTrafficSteeringFunctionResp>>(PrepareAsyncListTrafficSteeringFunctionsRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>> AsyncUpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>>(AsyncUpdateServiceGatewayUserPlaneRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>> PrepareAsyncUpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>>(PrepareAsyncUpdateServiceGatewayUserPlaneRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>> AsyncDeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>>(AsyncDeleteServiceGatewayUserPlaneRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>> PrepareAsyncDeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>>(PrepareAsyncDeleteServiceGatewayUserPlaneRaw(context, request, cq));
    }
    virtual ::grpc::Status GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>> AsyncGetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>>(AsyncGetServiceGatewayUserPlaneRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>> PrepareAsyncGetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>>(PrepareAsyncGetServiceGatewayUserPlaneRaw(context, request, cq));
    }
    virtual ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayUserPlaneResp>> AsyncListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayUserPlaneResp>>(AsyncListServiceGatewayUserPlanesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayUserPlaneResp>> PrepareAsyncListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayUserPlaneResp>>(PrepareAsyncListServiceGatewayUserPlanesRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>> AsyncUpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>>(AsyncUpdateNetworkConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>> PrepareAsyncUpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>>(PrepareAsyncUpdateNetworkConnectionRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>> AsyncDeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>>(AsyncDeleteNetworkConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>> PrepareAsyncDeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>>(PrepareAsyncDeleteNetworkConnectionRaw(context, request, cq));
    }
    virtual ::grpc::Status GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>> AsyncGetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>>(AsyncGetNetworkConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>> PrepareAsyncGetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>>(PrepareAsyncGetNetworkConnectionRaw(context, request, cq));
    }
    virtual ::grpc::Status ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::bbf::sss::ListNetworkConnectionResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListNetworkConnectionResp>> AsyncListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListNetworkConnectionResp>>(AsyncListNetworkConnectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListNetworkConnectionResp>> PrepareAsyncListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListNetworkConnectionResp>>(PrepareAsyncListNetworkConnectionsRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>> AsyncUpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>>(AsyncUpdateServiceGatewayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>> PrepareAsyncUpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>>(PrepareAsyncUpdateServiceGatewayRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>> AsyncDeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>>(AsyncDeleteServiceGatewayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>> PrepareAsyncDeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>>(PrepareAsyncDeleteServiceGatewayRaw(context, request, cq));
    }
    virtual ::grpc::Status GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>> AsyncGetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>>(AsyncGetServiceGatewayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>> PrepareAsyncGetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>>(PrepareAsyncGetServiceGatewayRaw(context, request, cq));
    }
    virtual ::grpc::Status ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::bbf::sss::ListServiceGatewayResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayResp>> AsyncListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayResp>>(AsyncListServiceGatewaysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayResp>> PrepareAsyncListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayResp>>(PrepareAsyncListServiceGatewaysRaw(context, request, cq));
    }
    virtual ::grpc::Status UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::bbf::sss::SessionContextResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>> AsyncUpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>>(AsyncUpdateSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>> PrepareAsyncUpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>>(PrepareAsyncUpdateSessionContextRaw(context, request, cq));
    }
    virtual ::grpc::Status DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::bbf::sss::SessionContextResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>> AsyncDeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>>(AsyncDeleteSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>> PrepareAsyncDeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>>(PrepareAsyncDeleteSessionContextRaw(context, request, cq));
    }
    virtual ::grpc::Status GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::bbf::sss::SessionContextResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>> AsyncGetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>>(AsyncGetSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>> PrepareAsyncGetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>>(PrepareAsyncGetSessionContextRaw(context, request, cq));
    }
    virtual ::grpc::Status ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::bbf::sss::ListSessionContextResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListSessionContextResp>> AsyncListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListSessionContextResp>>(AsyncListSessionContextsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListSessionContextResp>> PrepareAsyncListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListSessionContextResp>>(PrepareAsyncListSessionContextsRaw(context, request, cq));
    }
    virtual ::grpc::Status Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::bbf::sss::LookupResp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::LookupResp>> AsyncLookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::LookupResp>>(AsyncLookupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::LookupResp>> PrepareAsyncLookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::LookupResp>>(PrepareAsyncLookupRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Subscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq* request, ::grpc::ClientReadReactor< ::bbf::sss::Update>* reactor) = 0;
      virtual void UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientReaderInterface< ::bbf::sss::Update>* SubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::bbf::sss::Update>* AsyncSubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::bbf::sss::Update>* PrepareAsyncSubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>* AsyncUpdateShardRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>* PrepareAsyncUpdateShardRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>* AsyncDeleteShardRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>* PrepareAsyncDeleteShardRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>* AsyncGetShardRaw(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ShardResp>* PrepareAsyncGetShardRaw(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListShardResp>* AsyncListShardsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListShardResp>* PrepareAsyncListShardsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>* AsyncUpdateTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>* PrepareAsyncUpdateTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>* AsyncDeleteTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>* PrepareAsyncDeleteTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>* AsyncGetTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::TrafficSteeringFunctionResp>* PrepareAsyncGetTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListTrafficSteeringFunctionResp>* AsyncListTrafficSteeringFunctionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListTrafficSteeringFunctionResp>* PrepareAsyncListTrafficSteeringFunctionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>* AsyncUpdateServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>* PrepareAsyncUpdateServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>* AsyncDeleteServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>* PrepareAsyncDeleteServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>* AsyncGetServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayUserPlaneResp>* PrepareAsyncGetServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayUserPlaneResp>* AsyncListServiceGatewayUserPlanesRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayUserPlaneResp>* PrepareAsyncListServiceGatewayUserPlanesRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>* AsyncUpdateNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>* PrepareAsyncUpdateNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>* AsyncDeleteNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>* PrepareAsyncDeleteNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>* AsyncGetNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::NetworkConnectionResp>* PrepareAsyncGetNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListNetworkConnectionResp>* AsyncListNetworkConnectionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListNetworkConnectionResp>* PrepareAsyncListNetworkConnectionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>* AsyncUpdateServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>* PrepareAsyncUpdateServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>* AsyncDeleteServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>* PrepareAsyncDeleteServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>* AsyncGetServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ServiceGatewayResp>* PrepareAsyncGetServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayResp>* AsyncListServiceGatewaysRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListServiceGatewayResp>* PrepareAsyncListServiceGatewaysRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>* AsyncUpdateSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>* PrepareAsyncUpdateSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>* AsyncDeleteSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>* PrepareAsyncDeleteSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>* AsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::SessionContextResp>* PrepareAsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListSessionContextResp>* AsyncListSessionContextsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::ListSessionContextResp>* PrepareAsyncListSessionContextsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::LookupResp>* AsyncLookupRaw(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::bbf::sss::LookupResp>* PrepareAsyncLookupRaw(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    std::unique_ptr< ::grpc::ClientReader< ::bbf::sss::Update>> Subscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::bbf::sss::Update>>(SubscribeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::bbf::sss::Update>> AsyncSubscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::bbf::sss::Update>>(AsyncSubscribeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::bbf::sss::Update>> PrepareAsyncSubscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::bbf::sss::Update>>(PrepareAsyncSubscribeRaw(context, request, cq));
    }
    ::grpc::Status UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::bbf::sss::ShardResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>> AsyncUpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>>(AsyncUpdateShardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>> PrepareAsyncUpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>>(PrepareAsyncUpdateShardRaw(context, request, cq));
    }
    ::grpc::Status DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::bbf::sss::ShardResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>> AsyncDeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>>(AsyncDeleteShardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>> PrepareAsyncDeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>>(PrepareAsyncDeleteShardRaw(context, request, cq));
    }
    ::grpc::Status GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::bbf::sss::ShardResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>> AsyncGetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>>(AsyncGetShardRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>> PrepareAsyncGetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>>(PrepareAsyncGetShardRaw(context, request, cq));
    }
    ::grpc::Status ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::bbf::sss::ListShardResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>> AsyncListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>>(AsyncListShardsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>> PrepareAsyncListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>>(PrepareAsyncListShardsRaw(context, request, cq));
    }
    ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>> AsyncUpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>>(AsyncUpdateTrafficSteeringFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>> PrepareAsyncUpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>>(PrepareAsyncUpdateTrafficSteeringFunctionRaw(context, request, cq));
    }
    ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>> AsyncDeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>>(AsyncDeleteTrafficSteeringFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>> PrepareAsyncDeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>>(PrepareAsyncDeleteTrafficSteeringFunctionRaw(context, request, cq));
    }
    ::grpc::Status GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::bbf::sss::TrafficSteeringFunctionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>> AsyncGetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>>(AsyncGetTrafficSteeringFunctionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>> PrepareAsyncGetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>>(PrepareAsyncGetTrafficSteeringFunctionRaw(context, request, cq));
    }
    ::grpc::Status ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::bbf::sss::ListTrafficSteeringFunctionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>> AsyncListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>>(AsyncListTrafficSteeringFunctionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>> PrepareAsyncListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>>(PrepareAsyncListTrafficSteeringFunctionsRaw(context, request, cq));
    }
    ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>> AsyncUpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>>(AsyncUpdateServiceGatewayUserPlaneRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>> PrepareAsyncUpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>>(PrepareAsyncUpdateServiceGatewayUserPlaneRaw(context, request, cq));
    }
    ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>> AsyncDeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>>(AsyncDeleteServiceGatewayUserPlaneRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>> PrepareAsyncDeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>>(PrepareAsyncDeleteServiceGatewayUserPlaneRaw(context, request, cq));
    }
    ::grpc::Status GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>> AsyncGetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>>(AsyncGetServiceGatewayUserPlaneRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>> PrepareAsyncGetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>>(PrepareAsyncGetServiceGatewayUserPlaneRaw(context, request, cq));
    }
    ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>> AsyncListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>>(AsyncListServiceGatewayUserPlanesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>> PrepareAsyncListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>>(PrepareAsyncListServiceGatewayUserPlanesRaw(context, request, cq));
    }
    ::grpc::Status UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>> AsyncUpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>>(AsyncUpdateNetworkConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>> PrepareAsyncUpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>>(PrepareAsyncUpdateNetworkConnectionRaw(context, request, cq));
    }
    ::grpc::Status DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>> AsyncDeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>>(AsyncDeleteNetworkConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>> PrepareAsyncDeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>>(PrepareAsyncDeleteNetworkConnectionRaw(context, request, cq));
    }
    ::grpc::Status GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::bbf::sss::NetworkConnectionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>> AsyncGetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>>(AsyncGetNetworkConnectionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>> PrepareAsyncGetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>>(PrepareAsyncGetNetworkConnectionRaw(context, request, cq));
    }
    ::grpc::Status ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::bbf::sss::ListNetworkConnectionResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>> AsyncListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>>(AsyncListNetworkConnectionsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>> PrepareAsyncListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>>(PrepareAsyncListNetworkConnectionsRaw(context, request, cq));
    }
    ::grpc::Status UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>> AsyncUpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>>(AsyncUpdateServiceGatewayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>> PrepareAsyncUpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>>(PrepareAsyncUpdateServiceGatewayRaw(context, request, cq));
    }
    ::grpc::Status DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>> AsyncDeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>>(AsyncDeleteServiceGatewayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>> PrepareAsyncDeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>>(PrepareAsyncDeleteServiceGatewayRaw(context, request, cq));
    }
    ::grpc::Status GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::bbf::sss::ServiceGatewayResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>> AsyncGetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>>(AsyncGetServiceGatewayRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>> PrepareAsyncGetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>>(PrepareAsyncGetServiceGatewayRaw(context, request, cq));
    }
    ::grpc::Status ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::bbf::sss::ListServiceGatewayResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>> AsyncListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>>(AsyncListServiceGatewaysRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>> PrepareAsyncListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>>(PrepareAsyncListServiceGatewaysRaw(context, request, cq));
    }
    ::grpc::Status UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::bbf::sss::SessionContextResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>> AsyncUpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>>(AsyncUpdateSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>> PrepareAsyncUpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>>(PrepareAsyncUpdateSessionContextRaw(context, request, cq));
    }
    ::grpc::Status DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::bbf::sss::SessionContextResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>> AsyncDeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>>(AsyncDeleteSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>> PrepareAsyncDeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>>(PrepareAsyncDeleteSessionContextRaw(context, request, cq));
    }
    ::grpc::Status GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::bbf::sss::SessionContextResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>> AsyncGetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>>(AsyncGetSessionContextRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>> PrepareAsyncGetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>>(PrepareAsyncGetSessionContextRaw(context, request, cq));
    }
    ::grpc::Status ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::bbf::sss::ListSessionContextResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>> AsyncListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>>(AsyncListSessionContextsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>> PrepareAsyncListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>>(PrepareAsyncListSessionContextsRaw(context, request, cq));
    }
    ::grpc::Status Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::bbf::sss::LookupResp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>> AsyncLookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>>(AsyncLookupRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>> PrepareAsyncLookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>>(PrepareAsyncLookupRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Subscribe(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq* request, ::grpc::ClientReadReactor< ::bbf::sss::Update>* reactor) override;
      void UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)>) override;
      void UpdateShard(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)>) override;
      void DeleteShard(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response, std::function<void(::grpc::Status)>) override;
      void GetShard(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response, std::function<void(::grpc::Status)>) override;
      void ListShards(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) override;
      void UpdateTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) override;
      void DeleteTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) override;
      void GetTrafficSteeringFunction(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response, std::function<void(::grpc::Status)>) override;
      void ListTrafficSteeringFunctions(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) override;
      void UpdateServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) override;
      void DeleteServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) override;
      void GetServiceGatewayUserPlane(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response, std::function<void(::grpc::Status)>) override;
      void ListServiceGatewayUserPlanes(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)>) override;
      void UpdateNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)>) override;
      void DeleteNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, std::function<void(::grpc::Status)>) override;
      void GetNetworkConnection(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response, std::function<void(::grpc::Status)>) override;
      void ListNetworkConnections(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)>) override;
      void UpdateServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)>) override;
      void DeleteServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, std::function<void(::grpc::Status)>) override;
      void GetServiceGateway(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response, std::function<void(::grpc::Status)>) override;
      void ListServiceGateways(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)>) override;
      void UpdateSessionContext(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)>) override;
      void DeleteSessionContext(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response, std::function<void(::grpc::Status)>) override;
      void GetSessionContext(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response, std::function<void(::grpc::Status)>) override;
      void ListSessionContexts(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response, std::function<void(::grpc::Status)>) override;
      void Lookup(::grpc::ClientContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientReader< ::bbf::sss::Update>* SubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request) override;
    ::grpc::ClientAsyncReader< ::bbf::sss::Update>* AsyncSubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::bbf::sss::Update>* PrepareAsyncSubscribeRaw(::grpc::ClientContext* context, const ::bbf::sss::SubscribeReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* AsyncUpdateShardRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* PrepareAsyncUpdateShardRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* AsyncDeleteShardRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* PrepareAsyncDeleteShardRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* AsyncGetShardRaw(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ShardResp>* PrepareAsyncGetShardRaw(::grpc::ClientContext* context, const ::bbf::sss::GetShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>* AsyncListShardsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListShardResp>* PrepareAsyncListShardsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListShardReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* AsyncUpdateTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* PrepareAsyncUpdateTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* AsyncDeleteTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* PrepareAsyncDeleteTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* AsyncGetTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::TrafficSteeringFunctionResp>* PrepareAsyncGetTrafficSteeringFunctionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>* AsyncListTrafficSteeringFunctionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListTrafficSteeringFunctionResp>* PrepareAsyncListTrafficSteeringFunctionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* AsyncUpdateServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* PrepareAsyncUpdateServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* AsyncDeleteServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* PrepareAsyncDeleteServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* AsyncGetServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayUserPlaneResp>* PrepareAsyncGetServiceGatewayUserPlaneRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>* AsyncListServiceGatewayUserPlanesRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayUserPlaneResp>* PrepareAsyncListServiceGatewayUserPlanesRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* AsyncUpdateNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* PrepareAsyncUpdateNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* AsyncDeleteNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* PrepareAsyncDeleteNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* AsyncGetNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::NetworkConnectionResp>* PrepareAsyncGetNetworkConnectionRaw(::grpc::ClientContext* context, const ::bbf::sss::GetNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>* AsyncListNetworkConnectionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListNetworkConnectionResp>* PrepareAsyncListNetworkConnectionsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListNetworkConnectionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* AsyncUpdateServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* PrepareAsyncUpdateServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* AsyncDeleteServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* PrepareAsyncDeleteServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* AsyncGetServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ServiceGatewayResp>* PrepareAsyncGetServiceGatewayRaw(::grpc::ClientContext* context, const ::bbf::sss::GetServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>* AsyncListServiceGatewaysRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListServiceGatewayResp>* PrepareAsyncListServiceGatewaysRaw(::grpc::ClientContext* context, const ::bbf::sss::ListServiceGatewayReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* AsyncUpdateSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* PrepareAsyncUpdateSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::UpdateSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* AsyncDeleteSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* PrepareAsyncDeleteSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::DeleteSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* AsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::SessionContextResp>* PrepareAsyncGetSessionContextRaw(::grpc::ClientContext* context, const ::bbf::sss::GetSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>* AsyncListSessionContextsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::ListSessionContextResp>* PrepareAsyncListSessionContextsRaw(::grpc::ClientContext* context, const ::bbf::sss::ListSessionContextReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>* AsyncLookupRaw(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::bbf::sss::LookupResp>* PrepareAsyncLookupRaw(::grpc::ClientContext* context, const ::bbf::sss::LookupReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Subscribe_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateShard_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteShard_;
    const ::grpc::internal::RpcMethod rpcmethod_GetShard_;
    const ::grpc::internal::RpcMethod rpcmethod_ListShards_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateTrafficSteeringFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteTrafficSteeringFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_GetTrafficSteeringFunction_;
    const ::grpc::internal::RpcMethod rpcmethod_ListTrafficSteeringFunctions_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateServiceGatewayUserPlane_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteServiceGatewayUserPlane_;
    const ::grpc::internal::RpcMethod rpcmethod_GetServiceGatewayUserPlane_;
    const ::grpc::internal::RpcMethod rpcmethod_ListServiceGatewayUserPlanes_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateNetworkConnection_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteNetworkConnection_;
    const ::grpc::internal::RpcMethod rpcmethod_GetNetworkConnection_;
    const ::grpc::internal::RpcMethod rpcmethod_ListNetworkConnections_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateServiceGateway_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteServiceGateway_;
    const ::grpc::internal::RpcMethod rpcmethod_GetServiceGateway_;
    const ::grpc::internal::RpcMethod rpcmethod_ListServiceGateways_;
    const ::grpc::internal::RpcMethod rpcmethod_UpdateSessionContext_;
    const ::grpc::internal::RpcMethod rpcmethod_DeleteSessionContext_;
    const ::grpc::internal::RpcMethod rpcmethod_GetSessionContext_;
    const ::grpc::internal::RpcMethod rpcmethod_ListSessionContexts_;
    const ::grpc::internal::RpcMethod rpcmethod_Lookup_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Subscribe(::grpc::ServerContext* context, const ::bbf::sss::SubscribeReq* request, ::grpc::ServerWriter< ::bbf::sss::Update>* writer);
    virtual ::grpc::Status UpdateShard(::grpc::ServerContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response);
    virtual ::grpc::Status DeleteShard(::grpc::ServerContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response);
    virtual ::grpc::Status GetShard(::grpc::ServerContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response);
    virtual ::grpc::Status ListShards(::grpc::ServerContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response);
    virtual ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ServerContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response);
    virtual ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ServerContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response);
    virtual ::grpc::Status GetTrafficSteeringFunction(::grpc::ServerContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response);
    virtual ::grpc::Status ListTrafficSteeringFunctions(::grpc::ServerContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response);
    virtual ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ServerContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response);
    virtual ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ServerContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response);
    virtual ::grpc::Status GetServiceGatewayUserPlane(::grpc::ServerContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response);
    virtual ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ServerContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response);
    virtual ::grpc::Status UpdateNetworkConnection(::grpc::ServerContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response);
    virtual ::grpc::Status DeleteNetworkConnection(::grpc::ServerContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response);
    virtual ::grpc::Status GetNetworkConnection(::grpc::ServerContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response);
    virtual ::grpc::Status ListNetworkConnections(::grpc::ServerContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response);
    virtual ::grpc::Status UpdateServiceGateway(::grpc::ServerContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response);
    virtual ::grpc::Status DeleteServiceGateway(::grpc::ServerContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response);
    virtual ::grpc::Status GetServiceGateway(::grpc::ServerContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response);
    virtual ::grpc::Status ListServiceGateways(::grpc::ServerContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response);
    virtual ::grpc::Status UpdateSessionContext(::grpc::ServerContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response);
    virtual ::grpc::Status DeleteSessionContext(::grpc::ServerContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response);
    virtual ::grpc::Status GetSessionContext(::grpc::ServerContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response);
    virtual ::grpc::Status ListSessionContexts(::grpc::ServerContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response);
    virtual ::grpc::Status Lookup(::grpc::ServerContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Subscribe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Subscribe() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Subscribe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Subscribe(::grpc::ServerContext* /*context*/, const ::bbf::sss::SubscribeReq* /*request*/, ::grpc::ServerWriter< ::bbf::sss::Update>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribe(::grpc::ServerContext* context, ::bbf::sss::SubscribeReq* request, ::grpc::ServerAsyncWriter< ::bbf::sss::Update>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateShard() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UpdateShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateShard(::grpc::ServerContext* context, ::bbf::sss::UpdateShardReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ShardResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteShard() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_DeleteShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteShard(::grpc::ServerContext* context, ::bbf::sss::DeleteShardReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ShardResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetShard() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_GetShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetShard(::grpc::ServerContext* context, ::bbf::sss::GetShardReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ShardResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListShards : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListShards() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ListShards() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListShards(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListShardReq* /*request*/, ::bbf::sss::ListShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListShards(::grpc::ServerContext* context, ::bbf::sss::ListShardReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ListShardResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_UpdateTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTrafficSteeringFunction(::grpc::ServerContext* context, ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::TrafficSteeringFunctionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_DeleteTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTrafficSteeringFunction(::grpc::ServerContext* context, ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::TrafficSteeringFunctionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_GetTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTrafficSteeringFunction(::grpc::ServerContext* context, ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::TrafficSteeringFunctionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListTrafficSteeringFunctions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListTrafficSteeringFunctions() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_ListTrafficSteeringFunctions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrafficSteeringFunctions(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::ListTrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTrafficSteeringFunctions(::grpc::ServerContext* context, ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ListTrafficSteeringFunctionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_UpdateServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateServiceGatewayUserPlane(::grpc::ServerContext* context, ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ServiceGatewayUserPlaneResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_DeleteServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteServiceGatewayUserPlane(::grpc::ServerContext* context, ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ServiceGatewayUserPlaneResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_GetServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServiceGatewayUserPlane(::grpc::ServerContext* context, ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ServiceGatewayUserPlaneResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListServiceGatewayUserPlanes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListServiceGatewayUserPlanes() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_ListServiceGatewayUserPlanes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ListServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListServiceGatewayUserPlanes(::grpc::ServerContext* context, ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ListServiceGatewayUserPlaneResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateNetworkConnection() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_UpdateNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNetworkConnection(::grpc::ServerContext* context, ::bbf::sss::UpdateNetworkConnectionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::NetworkConnectionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteNetworkConnection() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_DeleteNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNetworkConnection(::grpc::ServerContext* context, ::bbf::sss::DeleteNetworkConnectionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::NetworkConnectionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetNetworkConnection() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_GetNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNetworkConnection(::grpc::ServerContext* context, ::bbf::sss::GetNetworkConnectionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::NetworkConnectionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListNetworkConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListNetworkConnections() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ListNetworkConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNetworkConnections(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListNetworkConnectionReq* /*request*/, ::bbf::sss::ListNetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNetworkConnections(::grpc::ServerContext* context, ::bbf::sss::ListNetworkConnectionReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ListNetworkConnectionResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateServiceGateway() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_UpdateServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateServiceGateway(::grpc::ServerContext* context, ::bbf::sss::UpdateServiceGatewayReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ServiceGatewayResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteServiceGateway() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_DeleteServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteServiceGateway(::grpc::ServerContext* context, ::bbf::sss::DeleteServiceGatewayReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ServiceGatewayResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetServiceGateway() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_GetServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServiceGateway(::grpc::ServerContext* context, ::bbf::sss::GetServiceGatewayReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ServiceGatewayResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListServiceGateways : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListServiceGateways() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_ListServiceGateways() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGateways(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayReq* /*request*/, ::bbf::sss::ListServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListServiceGateways(::grpc::ServerContext* context, ::bbf::sss::ListServiceGatewayReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ListServiceGatewayResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpdateSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UpdateSessionContext() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_UpdateSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSessionContext(::grpc::ServerContext* context, ::bbf::sss::UpdateSessionContextReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::SessionContextResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeleteSessionContext() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_DeleteSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSessionContext(::grpc::ServerContext* context, ::bbf::sss::DeleteSessionContextReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::SessionContextResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSessionContext(::grpc::ServerContext* context, ::bbf::sss::GetSessionContextReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::SessionContextResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListSessionContexts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ListSessionContexts() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_ListSessionContexts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionContexts(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListSessionContextReq* /*request*/, ::bbf::sss::ListSessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSessionContexts(::grpc::ServerContext* context, ::bbf::sss::ListSessionContextReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::ListSessionContextResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Lookup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Lookup() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_Lookup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lookup(::grpc::ServerContext* /*context*/, const ::bbf::sss::LookupReq* /*request*/, ::bbf::sss::LookupResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLookup(::grpc::ServerContext* context, ::bbf::sss::LookupReq* request, ::grpc::ServerAsyncResponseWriter< ::bbf::sss::LookupResp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Subscribe<WithAsyncMethod_UpdateShard<WithAsyncMethod_DeleteShard<WithAsyncMethod_GetShard<WithAsyncMethod_ListShards<WithAsyncMethod_UpdateTrafficSteeringFunction<WithAsyncMethod_DeleteTrafficSteeringFunction<WithAsyncMethod_GetTrafficSteeringFunction<WithAsyncMethod_ListTrafficSteeringFunctions<WithAsyncMethod_UpdateServiceGatewayUserPlane<WithAsyncMethod_DeleteServiceGatewayUserPlane<WithAsyncMethod_GetServiceGatewayUserPlane<WithAsyncMethod_ListServiceGatewayUserPlanes<WithAsyncMethod_UpdateNetworkConnection<WithAsyncMethod_DeleteNetworkConnection<WithAsyncMethod_GetNetworkConnection<WithAsyncMethod_ListNetworkConnections<WithAsyncMethod_UpdateServiceGateway<WithAsyncMethod_DeleteServiceGateway<WithAsyncMethod_GetServiceGateway<WithAsyncMethod_ListServiceGateways<WithAsyncMethod_UpdateSessionContext<WithAsyncMethod_DeleteSessionContext<WithAsyncMethod_GetSessionContext<WithAsyncMethod_ListSessionContexts<WithAsyncMethod_Lookup<Service > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Subscribe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Subscribe() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::bbf::sss::SubscribeReq, ::bbf::sss::Update>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::SubscribeReq* request) { return this->Subscribe(context, request); }));
    }
    ~WithCallbackMethod_Subscribe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Subscribe(::grpc::ServerContext* /*context*/, const ::bbf::sss::SubscribeReq* /*request*/, ::grpc::ServerWriter< ::bbf::sss::Update>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::bbf::sss::Update>* Subscribe(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::SubscribeReq* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateShard() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::UpdateShardReq* request, ::bbf::sss::ShardResp* response) { return this->UpdateShard(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateShard(
        ::grpc::MessageAllocator< ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateShard(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::UpdateShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteShard() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::DeleteShardReq* request, ::bbf::sss::ShardResp* response) { return this->DeleteShard(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteShard(
        ::grpc::MessageAllocator< ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteShard(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::DeleteShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetShard() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::GetShardReq* request, ::bbf::sss::ShardResp* response) { return this->GetShard(context, request, response); }));}
    void SetMessageAllocatorFor_GetShard(
        ::grpc::MessageAllocator< ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetShard(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::GetShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListShards : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListShards() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::ListShardReq* request, ::bbf::sss::ListShardResp* response) { return this->ListShards(context, request, response); }));}
    void SetMessageAllocatorFor_ListShards(
        ::grpc::MessageAllocator< ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListShards() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListShards(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListShardReq* /*request*/, ::bbf::sss::ListShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListShards(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::ListShardReq* /*request*/, ::bbf::sss::ListShardResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response) { return this->UpdateTrafficSteeringFunction(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateTrafficSteeringFunction(
        ::grpc::MessageAllocator< ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTrafficSteeringFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response) { return this->DeleteTrafficSteeringFunction(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteTrafficSteeringFunction(
        ::grpc::MessageAllocator< ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTrafficSteeringFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::GetTrafficSteeringFunctionReq* request, ::bbf::sss::TrafficSteeringFunctionResp* response) { return this->GetTrafficSteeringFunction(context, request, response); }));}
    void SetMessageAllocatorFor_GetTrafficSteeringFunction(
        ::grpc::MessageAllocator< ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTrafficSteeringFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::GetTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListTrafficSteeringFunctions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListTrafficSteeringFunctions() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::ListTrafficSteeringFunctionReq* request, ::bbf::sss::ListTrafficSteeringFunctionResp* response) { return this->ListTrafficSteeringFunctions(context, request, response); }));}
    void SetMessageAllocatorFor_ListTrafficSteeringFunctions(
        ::grpc::MessageAllocator< ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListTrafficSteeringFunctions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrafficSteeringFunctions(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::ListTrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTrafficSteeringFunctions(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::ListTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::ListTrafficSteeringFunctionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) { return this->UpdateServiceGatewayUserPlane(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateServiceGatewayUserPlane(
        ::grpc::MessageAllocator< ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(9);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateServiceGatewayUserPlane(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) { return this->DeleteServiceGatewayUserPlane(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteServiceGatewayUserPlane(
        ::grpc::MessageAllocator< ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(10);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteServiceGatewayUserPlane(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::GetServiceGatewayUserPlaneReq* request, ::bbf::sss::ServiceGatewayUserPlaneResp* response) { return this->GetServiceGatewayUserPlane(context, request, response); }));}
    void SetMessageAllocatorFor_GetServiceGatewayUserPlane(
        ::grpc::MessageAllocator< ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(11);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetServiceGatewayUserPlane(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListServiceGatewayUserPlanes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListServiceGatewayUserPlanes() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::ListServiceGatewayUserPlaneReq* request, ::bbf::sss::ListServiceGatewayUserPlaneResp* response) { return this->ListServiceGatewayUserPlanes(context, request, response); }));}
    void SetMessageAllocatorFor_ListServiceGatewayUserPlanes(
        ::grpc::MessageAllocator< ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(12);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListServiceGatewayUserPlanes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ListServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListServiceGatewayUserPlanes(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ListServiceGatewayUserPlaneResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateNetworkConnection() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::UpdateNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response) { return this->UpdateNetworkConnection(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateNetworkConnection(
        ::grpc::MessageAllocator< ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(13);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNetworkConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::UpdateNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteNetworkConnection() {
      ::grpc::Service::MarkMethodCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::DeleteNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response) { return this->DeleteNetworkConnection(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteNetworkConnection(
        ::grpc::MessageAllocator< ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(14);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteNetworkConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::DeleteNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetNetworkConnection() {
      ::grpc::Service::MarkMethodCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::GetNetworkConnectionReq* request, ::bbf::sss::NetworkConnectionResp* response) { return this->GetNetworkConnection(context, request, response); }));}
    void SetMessageAllocatorFor_GetNetworkConnection(
        ::grpc::MessageAllocator< ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(15);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNetworkConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::GetNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListNetworkConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListNetworkConnections() {
      ::grpc::Service::MarkMethodCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::ListNetworkConnectionReq* request, ::bbf::sss::ListNetworkConnectionResp* response) { return this->ListNetworkConnections(context, request, response); }));}
    void SetMessageAllocatorFor_ListNetworkConnections(
        ::grpc::MessageAllocator< ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(16);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListNetworkConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNetworkConnections(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListNetworkConnectionReq* /*request*/, ::bbf::sss::ListNetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListNetworkConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::ListNetworkConnectionReq* /*request*/, ::bbf::sss::ListNetworkConnectionResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateServiceGateway() {
      ::grpc::Service::MarkMethodCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::UpdateServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response) { return this->UpdateServiceGateway(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateServiceGateway(
        ::grpc::MessageAllocator< ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(17);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateServiceGateway(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteServiceGateway() {
      ::grpc::Service::MarkMethodCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::DeleteServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response) { return this->DeleteServiceGateway(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteServiceGateway(
        ::grpc::MessageAllocator< ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(18);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteServiceGateway(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetServiceGateway() {
      ::grpc::Service::MarkMethodCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::GetServiceGatewayReq* request, ::bbf::sss::ServiceGatewayResp* response) { return this->GetServiceGateway(context, request, response); }));}
    void SetMessageAllocatorFor_GetServiceGateway(
        ::grpc::MessageAllocator< ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(19);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetServiceGateway(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListServiceGateways : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListServiceGateways() {
      ::grpc::Service::MarkMethodCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::ListServiceGatewayReq* request, ::bbf::sss::ListServiceGatewayResp* response) { return this->ListServiceGateways(context, request, response); }));}
    void SetMessageAllocatorFor_ListServiceGateways(
        ::grpc::MessageAllocator< ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(20);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListServiceGateways() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGateways(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayReq* /*request*/, ::bbf::sss::ListServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListServiceGateways(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayReq* /*request*/, ::bbf::sss::ListServiceGatewayResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UpdateSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UpdateSessionContext() {
      ::grpc::Service::MarkMethodCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::UpdateSessionContextReq* request, ::bbf::sss::SessionContextResp* response) { return this->UpdateSessionContext(context, request, response); }));}
    void SetMessageAllocatorFor_UpdateSessionContext(
        ::grpc::MessageAllocator< ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(21);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UpdateSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::UpdateSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_DeleteSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_DeleteSessionContext() {
      ::grpc::Service::MarkMethodCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::DeleteSessionContextReq* request, ::bbf::sss::SessionContextResp* response) { return this->DeleteSessionContext(context, request, response); }));}
    void SetMessageAllocatorFor_DeleteSessionContext(
        ::grpc::MessageAllocator< ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(22);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_DeleteSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::DeleteSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::GetSessionContextReq* request, ::bbf::sss::SessionContextResp* response) { return this->GetSessionContext(context, request, response); }));}
    void SetMessageAllocatorFor_GetSessionContext(
        ::grpc::MessageAllocator< ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(23);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::GetSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ListSessionContexts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ListSessionContexts() {
      ::grpc::Service::MarkMethodCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::ListSessionContextReq* request, ::bbf::sss::ListSessionContextResp* response) { return this->ListSessionContexts(context, request, response); }));}
    void SetMessageAllocatorFor_ListSessionContexts(
        ::grpc::MessageAllocator< ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(24);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ListSessionContexts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionContexts(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListSessionContextReq* /*request*/, ::bbf::sss::ListSessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListSessionContexts(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::ListSessionContextReq* /*request*/, ::bbf::sss::ListSessionContextResp* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Lookup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Lookup() {
      ::grpc::Service::MarkMethodCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::bbf::sss::LookupReq, ::bbf::sss::LookupResp>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::bbf::sss::LookupReq* request, ::bbf::sss::LookupResp* response) { return this->Lookup(context, request, response); }));}
    void SetMessageAllocatorFor_Lookup(
        ::grpc::MessageAllocator< ::bbf::sss::LookupReq, ::bbf::sss::LookupResp>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(25);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::bbf::sss::LookupReq, ::bbf::sss::LookupResp>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Lookup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lookup(::grpc::ServerContext* /*context*/, const ::bbf::sss::LookupReq* /*request*/, ::bbf::sss::LookupResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Lookup(
      ::grpc::CallbackServerContext* /*context*/, const ::bbf::sss::LookupReq* /*request*/, ::bbf::sss::LookupResp* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Subscribe<WithCallbackMethod_UpdateShard<WithCallbackMethod_DeleteShard<WithCallbackMethod_GetShard<WithCallbackMethod_ListShards<WithCallbackMethod_UpdateTrafficSteeringFunction<WithCallbackMethod_DeleteTrafficSteeringFunction<WithCallbackMethod_GetTrafficSteeringFunction<WithCallbackMethod_ListTrafficSteeringFunctions<WithCallbackMethod_UpdateServiceGatewayUserPlane<WithCallbackMethod_DeleteServiceGatewayUserPlane<WithCallbackMethod_GetServiceGatewayUserPlane<WithCallbackMethod_ListServiceGatewayUserPlanes<WithCallbackMethod_UpdateNetworkConnection<WithCallbackMethod_DeleteNetworkConnection<WithCallbackMethod_GetNetworkConnection<WithCallbackMethod_ListNetworkConnections<WithCallbackMethod_UpdateServiceGateway<WithCallbackMethod_DeleteServiceGateway<WithCallbackMethod_GetServiceGateway<WithCallbackMethod_ListServiceGateways<WithCallbackMethod_UpdateSessionContext<WithCallbackMethod_DeleteSessionContext<WithCallbackMethod_GetSessionContext<WithCallbackMethod_ListSessionContexts<WithCallbackMethod_Lookup<Service > > > > > > > > > > > > > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Subscribe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Subscribe() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Subscribe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Subscribe(::grpc::ServerContext* /*context*/, const ::bbf::sss::SubscribeReq* /*request*/, ::grpc::ServerWriter< ::bbf::sss::Update>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateShard() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UpdateShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteShard() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_DeleteShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetShard() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_GetShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListShards : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListShards() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ListShards() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListShards(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListShardReq* /*request*/, ::bbf::sss::ListShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_UpdateTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_DeleteTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_GetTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListTrafficSteeringFunctions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListTrafficSteeringFunctions() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_ListTrafficSteeringFunctions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrafficSteeringFunctions(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::ListTrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_UpdateServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_DeleteServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_GetServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListServiceGatewayUserPlanes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListServiceGatewayUserPlanes() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_ListServiceGatewayUserPlanes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ListServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateNetworkConnection() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_UpdateNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteNetworkConnection() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_DeleteNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetNetworkConnection() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_GetNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListNetworkConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListNetworkConnections() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ListNetworkConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNetworkConnections(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListNetworkConnectionReq* /*request*/, ::bbf::sss::ListNetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateServiceGateway() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_UpdateServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteServiceGateway() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_DeleteServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetServiceGateway() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_GetServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListServiceGateways : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListServiceGateways() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_ListServiceGateways() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGateways(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayReq* /*request*/, ::bbf::sss::ListServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpdateSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UpdateSessionContext() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_UpdateSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeleteSessionContext() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_DeleteSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListSessionContexts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ListSessionContexts() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_ListSessionContexts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionContexts(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListSessionContextReq* /*request*/, ::bbf::sss::ListSessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Lookup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Lookup() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_Lookup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lookup(::grpc::ServerContext* /*context*/, const ::bbf::sss::LookupReq* /*request*/, ::bbf::sss::LookupResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Subscribe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Subscribe() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Subscribe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Subscribe(::grpc::ServerContext* /*context*/, const ::bbf::sss::SubscribeReq* /*request*/, ::grpc::ServerWriter< ::bbf::sss::Update>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSubscribe(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(0, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateShard() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UpdateShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateShard(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteShard() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_DeleteShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteShard(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetShard() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_GetShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetShard(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListShards : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListShards() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ListShards() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListShards(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListShardReq* /*request*/, ::bbf::sss::ListShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListShards(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_UpdateTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateTrafficSteeringFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_DeleteTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteTrafficSteeringFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_GetTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetTrafficSteeringFunction(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListTrafficSteeringFunctions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListTrafficSteeringFunctions() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_ListTrafficSteeringFunctions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrafficSteeringFunctions(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::ListTrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListTrafficSteeringFunctions(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_UpdateServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateServiceGatewayUserPlane(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_DeleteServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteServiceGatewayUserPlane(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_GetServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServiceGatewayUserPlane(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListServiceGatewayUserPlanes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListServiceGatewayUserPlanes() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_ListServiceGatewayUserPlanes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ListServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListServiceGatewayUserPlanes(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateNetworkConnection() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_UpdateNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateNetworkConnection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteNetworkConnection() {
      ::grpc::Service::MarkMethodRaw(14);
    }
    ~WithRawMethod_DeleteNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteNetworkConnection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetNetworkConnection() {
      ::grpc::Service::MarkMethodRaw(15);
    }
    ~WithRawMethod_GetNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetNetworkConnection(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListNetworkConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListNetworkConnections() {
      ::grpc::Service::MarkMethodRaw(16);
    }
    ~WithRawMethod_ListNetworkConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNetworkConnections(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListNetworkConnectionReq* /*request*/, ::bbf::sss::ListNetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListNetworkConnections(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateServiceGateway() {
      ::grpc::Service::MarkMethodRaw(17);
    }
    ~WithRawMethod_UpdateServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateServiceGateway(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteServiceGateway() {
      ::grpc::Service::MarkMethodRaw(18);
    }
    ~WithRawMethod_DeleteServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteServiceGateway(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetServiceGateway() {
      ::grpc::Service::MarkMethodRaw(19);
    }
    ~WithRawMethod_GetServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetServiceGateway(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListServiceGateways : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListServiceGateways() {
      ::grpc::Service::MarkMethodRaw(20);
    }
    ~WithRawMethod_ListServiceGateways() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGateways(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayReq* /*request*/, ::bbf::sss::ListServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListServiceGateways(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UpdateSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UpdateSessionContext() {
      ::grpc::Service::MarkMethodRaw(21);
    }
    ~WithRawMethod_UpdateSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpdateSessionContext(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeleteSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeleteSessionContext() {
      ::grpc::Service::MarkMethodRaw(22);
    }
    ~WithRawMethod_DeleteSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteSessionContext(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodRaw(23);
    }
    ~WithRawMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSessionContext(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ListSessionContexts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ListSessionContexts() {
      ::grpc::Service::MarkMethodRaw(24);
    }
    ~WithRawMethod_ListSessionContexts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionContexts(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListSessionContextReq* /*request*/, ::bbf::sss::ListSessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListSessionContexts(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Lookup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Lookup() {
      ::grpc::Service::MarkMethodRaw(25);
    }
    ~WithRawMethod_Lookup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lookup(::grpc::ServerContext* /*context*/, const ::bbf::sss::LookupReq* /*request*/, ::bbf::sss::LookupResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLookup(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Subscribe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Subscribe() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->Subscribe(context, request); }));
    }
    ~WithRawCallbackMethod_Subscribe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Subscribe(::grpc::ServerContext* /*context*/, const ::bbf::sss::SubscribeReq* /*request*/, ::grpc::ServerWriter< ::bbf::sss::Update>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* Subscribe(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateShard() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateShard(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateShard(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteShard() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteShard(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteShard(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetShard() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetShard(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetShard(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListShards : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListShards() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListShards(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListShards() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListShards(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListShardReq* /*request*/, ::bbf::sss::ListShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListShards(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateTrafficSteeringFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateTrafficSteeringFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteTrafficSteeringFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteTrafficSteeringFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetTrafficSteeringFunction(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetTrafficSteeringFunction(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListTrafficSteeringFunctions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListTrafficSteeringFunctions() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListTrafficSteeringFunctions(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListTrafficSteeringFunctions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListTrafficSteeringFunctions(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::ListTrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListTrafficSteeringFunctions(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateServiceGatewayUserPlane(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateServiceGatewayUserPlane(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteServiceGatewayUserPlane(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteServiceGatewayUserPlane(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetServiceGatewayUserPlane(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetServiceGatewayUserPlane(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListServiceGatewayUserPlanes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListServiceGatewayUserPlanes() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListServiceGatewayUserPlanes(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListServiceGatewayUserPlanes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ListServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListServiceGatewayUserPlanes(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateNetworkConnection() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateNetworkConnection(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateNetworkConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteNetworkConnection() {
      ::grpc::Service::MarkMethodRawCallback(14,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteNetworkConnection(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteNetworkConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetNetworkConnection() {
      ::grpc::Service::MarkMethodRawCallback(15,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetNetworkConnection(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetNetworkConnection(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListNetworkConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListNetworkConnections() {
      ::grpc::Service::MarkMethodRawCallback(16,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListNetworkConnections(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListNetworkConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListNetworkConnections(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListNetworkConnectionReq* /*request*/, ::bbf::sss::ListNetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListNetworkConnections(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateServiceGateway() {
      ::grpc::Service::MarkMethodRawCallback(17,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateServiceGateway(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateServiceGateway(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteServiceGateway() {
      ::grpc::Service::MarkMethodRawCallback(18,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteServiceGateway(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteServiceGateway(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetServiceGateway() {
      ::grpc::Service::MarkMethodRawCallback(19,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetServiceGateway(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetServiceGateway(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListServiceGateways : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListServiceGateways() {
      ::grpc::Service::MarkMethodRawCallback(20,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListServiceGateways(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListServiceGateways() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListServiceGateways(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayReq* /*request*/, ::bbf::sss::ListServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListServiceGateways(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UpdateSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UpdateSessionContext() {
      ::grpc::Service::MarkMethodRawCallback(21,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UpdateSessionContext(context, request, response); }));
    }
    ~WithRawCallbackMethod_UpdateSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpdateSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UpdateSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_DeleteSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_DeleteSessionContext() {
      ::grpc::Service::MarkMethodRawCallback(22,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeleteSessionContext(context, request, response); }));
    }
    ~WithRawCallbackMethod_DeleteSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* DeleteSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodRawCallback(23,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetSessionContext(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetSessionContext(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ListSessionContexts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ListSessionContexts() {
      ::grpc::Service::MarkMethodRawCallback(24,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ListSessionContexts(context, request, response); }));
    }
    ~WithRawCallbackMethod_ListSessionContexts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListSessionContexts(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListSessionContextReq* /*request*/, ::bbf::sss::ListSessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ListSessionContexts(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Lookup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Lookup() {
      ::grpc::Service::MarkMethodRawCallback(25,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Lookup(context, request, response); }));
    }
    ~WithRawCallbackMethod_Lookup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Lookup(::grpc::ServerContext* /*context*/, const ::bbf::sss::LookupReq* /*request*/, ::bbf::sss::LookupResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Lookup(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateShard() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::UpdateShardReq, ::bbf::sss::ShardResp>* streamer) {
                       return this->StreamedUpdateShard(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateShard(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::UpdateShardReq,::bbf::sss::ShardResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteShard() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::DeleteShardReq, ::bbf::sss::ShardResp>* streamer) {
                       return this->StreamedDeleteShard(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteShard(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::DeleteShardReq,::bbf::sss::ShardResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetShard : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetShard() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::GetShardReq, ::bbf::sss::ShardResp>* streamer) {
                       return this->StreamedGetShard(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetShard() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetShard(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetShardReq* /*request*/, ::bbf::sss::ShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetShard(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::GetShardReq,::bbf::sss::ShardResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListShards : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListShards() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::ListShardReq, ::bbf::sss::ListShardResp>* streamer) {
                       return this->StreamedListShards(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListShards() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListShards(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListShardReq* /*request*/, ::bbf::sss::ListShardResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListShards(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::ListShardReq,::bbf::sss::ListShardResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::UpdateTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>* streamer) {
                       return this->StreamedUpdateTrafficSteeringFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateTrafficSteeringFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::UpdateTrafficSteeringFunctionReq,::bbf::sss::TrafficSteeringFunctionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::DeleteTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>* streamer) {
                       return this->StreamedDeleteTrafficSteeringFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteTrafficSteeringFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::DeleteTrafficSteeringFunctionReq,::bbf::sss::TrafficSteeringFunctionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetTrafficSteeringFunction : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetTrafficSteeringFunction() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::GetTrafficSteeringFunctionReq, ::bbf::sss::TrafficSteeringFunctionResp>* streamer) {
                       return this->StreamedGetTrafficSteeringFunction(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetTrafficSteeringFunction() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetTrafficSteeringFunction(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::TrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetTrafficSteeringFunction(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::GetTrafficSteeringFunctionReq,::bbf::sss::TrafficSteeringFunctionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListTrafficSteeringFunctions : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListTrafficSteeringFunctions() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::ListTrafficSteeringFunctionReq, ::bbf::sss::ListTrafficSteeringFunctionResp>* streamer) {
                       return this->StreamedListTrafficSteeringFunctions(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListTrafficSteeringFunctions() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListTrafficSteeringFunctions(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListTrafficSteeringFunctionReq* /*request*/, ::bbf::sss::ListTrafficSteeringFunctionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListTrafficSteeringFunctions(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::ListTrafficSteeringFunctionReq,::bbf::sss::ListTrafficSteeringFunctionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::UpdateServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>* streamer) {
                       return this->StreamedUpdateServiceGatewayUserPlane(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateServiceGatewayUserPlane(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::UpdateServiceGatewayUserPlaneReq,::bbf::sss::ServiceGatewayUserPlaneResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::DeleteServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>* streamer) {
                       return this->StreamedDeleteServiceGatewayUserPlane(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteServiceGatewayUserPlane(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::DeleteServiceGatewayUserPlaneReq,::bbf::sss::ServiceGatewayUserPlaneResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetServiceGatewayUserPlane : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetServiceGatewayUserPlane() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::GetServiceGatewayUserPlaneReq, ::bbf::sss::ServiceGatewayUserPlaneResp>* streamer) {
                       return this->StreamedGetServiceGatewayUserPlane(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetServiceGatewayUserPlane() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetServiceGatewayUserPlane(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetServiceGatewayUserPlane(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::GetServiceGatewayUserPlaneReq,::bbf::sss::ServiceGatewayUserPlaneResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListServiceGatewayUserPlanes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListServiceGatewayUserPlanes() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::ListServiceGatewayUserPlaneReq, ::bbf::sss::ListServiceGatewayUserPlaneResp>* streamer) {
                       return this->StreamedListServiceGatewayUserPlanes(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListServiceGatewayUserPlanes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListServiceGatewayUserPlanes(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayUserPlaneReq* /*request*/, ::bbf::sss::ListServiceGatewayUserPlaneResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListServiceGatewayUserPlanes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::ListServiceGatewayUserPlaneReq,::bbf::sss::ListServiceGatewayUserPlaneResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateNetworkConnection() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::UpdateNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>* streamer) {
                       return this->StreamedUpdateNetworkConnection(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateNetworkConnection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::UpdateNetworkConnectionReq,::bbf::sss::NetworkConnectionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteNetworkConnection() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::DeleteNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>* streamer) {
                       return this->StreamedDeleteNetworkConnection(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteNetworkConnection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::DeleteNetworkConnectionReq,::bbf::sss::NetworkConnectionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetNetworkConnection : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetNetworkConnection() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::GetNetworkConnectionReq, ::bbf::sss::NetworkConnectionResp>* streamer) {
                       return this->StreamedGetNetworkConnection(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetNetworkConnection() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetNetworkConnection(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetNetworkConnectionReq* /*request*/, ::bbf::sss::NetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetNetworkConnection(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::GetNetworkConnectionReq,::bbf::sss::NetworkConnectionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListNetworkConnections : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListNetworkConnections() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::ListNetworkConnectionReq, ::bbf::sss::ListNetworkConnectionResp>* streamer) {
                       return this->StreamedListNetworkConnections(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListNetworkConnections() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListNetworkConnections(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListNetworkConnectionReq* /*request*/, ::bbf::sss::ListNetworkConnectionResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListNetworkConnections(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::ListNetworkConnectionReq,::bbf::sss::ListNetworkConnectionResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateServiceGateway() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::UpdateServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>* streamer) {
                       return this->StreamedUpdateServiceGateway(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateServiceGateway(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::UpdateServiceGatewayReq,::bbf::sss::ServiceGatewayResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteServiceGateway() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::DeleteServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>* streamer) {
                       return this->StreamedDeleteServiceGateway(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteServiceGateway(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::DeleteServiceGatewayReq,::bbf::sss::ServiceGatewayResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetServiceGateway : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetServiceGateway() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::GetServiceGatewayReq, ::bbf::sss::ServiceGatewayResp>* streamer) {
                       return this->StreamedGetServiceGateway(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetServiceGateway() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetServiceGateway(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetServiceGatewayReq* /*request*/, ::bbf::sss::ServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetServiceGateway(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::GetServiceGatewayReq,::bbf::sss::ServiceGatewayResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListServiceGateways : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListServiceGateways() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::ListServiceGatewayReq, ::bbf::sss::ListServiceGatewayResp>* streamer) {
                       return this->StreamedListServiceGateways(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListServiceGateways() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListServiceGateways(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListServiceGatewayReq* /*request*/, ::bbf::sss::ListServiceGatewayResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListServiceGateways(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::ListServiceGatewayReq,::bbf::sss::ListServiceGatewayResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpdateSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UpdateSessionContext() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::UpdateSessionContextReq, ::bbf::sss::SessionContextResp>* streamer) {
                       return this->StreamedUpdateSessionContext(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UpdateSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpdateSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::UpdateSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpdateSessionContext(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::UpdateSessionContextReq,::bbf::sss::SessionContextResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeleteSessionContext() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::DeleteSessionContextReq, ::bbf::sss::SessionContextResp>* streamer) {
                       return this->StreamedDeleteSessionContext(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeleteSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::DeleteSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteSessionContext(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::DeleteSessionContextReq,::bbf::sss::SessionContextResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSessionContext : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetSessionContext() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::GetSessionContextReq, ::bbf::sss::SessionContextResp>* streamer) {
                       return this->StreamedGetSessionContext(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetSessionContext() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSessionContext(::grpc::ServerContext* /*context*/, const ::bbf::sss::GetSessionContextReq* /*request*/, ::bbf::sss::SessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSessionContext(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::GetSessionContextReq,::bbf::sss::SessionContextResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListSessionContexts : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ListSessionContexts() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::ListSessionContextReq, ::bbf::sss::ListSessionContextResp>* streamer) {
                       return this->StreamedListSessionContexts(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ListSessionContexts() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListSessionContexts(::grpc::ServerContext* /*context*/, const ::bbf::sss::ListSessionContextReq* /*request*/, ::bbf::sss::ListSessionContextResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListSessionContexts(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::ListSessionContextReq,::bbf::sss::ListSessionContextResp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Lookup : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Lookup() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::internal::StreamedUnaryHandler<
          ::bbf::sss::LookupReq, ::bbf::sss::LookupResp>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::bbf::sss::LookupReq, ::bbf::sss::LookupResp>* streamer) {
                       return this->StreamedLookup(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Lookup() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Lookup(::grpc::ServerContext* /*context*/, const ::bbf::sss::LookupReq* /*request*/, ::bbf::sss::LookupResp* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLookup(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::bbf::sss::LookupReq,::bbf::sss::LookupResp>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_UpdateShard<WithStreamedUnaryMethod_DeleteShard<WithStreamedUnaryMethod_GetShard<WithStreamedUnaryMethod_ListShards<WithStreamedUnaryMethod_UpdateTrafficSteeringFunction<WithStreamedUnaryMethod_DeleteTrafficSteeringFunction<WithStreamedUnaryMethod_GetTrafficSteeringFunction<WithStreamedUnaryMethod_ListTrafficSteeringFunctions<WithStreamedUnaryMethod_UpdateServiceGatewayUserPlane<WithStreamedUnaryMethod_DeleteServiceGatewayUserPlane<WithStreamedUnaryMethod_GetServiceGatewayUserPlane<WithStreamedUnaryMethod_ListServiceGatewayUserPlanes<WithStreamedUnaryMethod_UpdateNetworkConnection<WithStreamedUnaryMethod_DeleteNetworkConnection<WithStreamedUnaryMethod_GetNetworkConnection<WithStreamedUnaryMethod_ListNetworkConnections<WithStreamedUnaryMethod_UpdateServiceGateway<WithStreamedUnaryMethod_DeleteServiceGateway<WithStreamedUnaryMethod_GetServiceGateway<WithStreamedUnaryMethod_ListServiceGateways<WithStreamedUnaryMethod_UpdateSessionContext<WithStreamedUnaryMethod_DeleteSessionContext<WithStreamedUnaryMethod_GetSessionContext<WithStreamedUnaryMethod_ListSessionContexts<WithStreamedUnaryMethod_Lookup<Service > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_Subscribe : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_Subscribe() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::bbf::sss::SubscribeReq, ::bbf::sss::Update>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::bbf::sss::SubscribeReq, ::bbf::sss::Update>* streamer) {
                       return this->StreamedSubscribe(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_Subscribe() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Subscribe(::grpc::ServerContext* /*context*/, const ::bbf::sss::SubscribeReq* /*request*/, ::grpc::ServerWriter< ::bbf::sss::Update>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedSubscribe(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::bbf::sss::SubscribeReq,::bbf::sss::Update>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_Subscribe<Service > SplitStreamedService;
  typedef WithSplitStreamingMethod_Subscribe<WithStreamedUnaryMethod_UpdateShard<WithStreamedUnaryMethod_DeleteShard<WithStreamedUnaryMethod_GetShard<WithStreamedUnaryMethod_ListShards<WithStreamedUnaryMethod_UpdateTrafficSteeringFunction<WithStreamedUnaryMethod_DeleteTrafficSteeringFunction<WithStreamedUnaryMethod_GetTrafficSteeringFunction<WithStreamedUnaryMethod_ListTrafficSteeringFunctions<WithStreamedUnaryMethod_UpdateServiceGatewayUserPlane<WithStreamedUnaryMethod_DeleteServiceGatewayUserPlane<WithStreamedUnaryMethod_GetServiceGatewayUserPlane<WithStreamedUnaryMethod_ListServiceGatewayUserPlanes<WithStreamedUnaryMethod_UpdateNetworkConnection<WithStreamedUnaryMethod_DeleteNetworkConnection<WithStreamedUnaryMethod_GetNetworkConnection<WithStreamedUnaryMethod_ListNetworkConnections<WithStreamedUnaryMethod_UpdateServiceGateway<WithStreamedUnaryMethod_DeleteServiceGateway<WithStreamedUnaryMethod_GetServiceGateway<WithStreamedUnaryMethod_ListServiceGateways<WithStreamedUnaryMethod_UpdateSessionContext<WithStreamedUnaryMethod_DeleteSessionContext<WithStreamedUnaryMethod_GetSessionContext<WithStreamedUnaryMethod_ListSessionContexts<WithStreamedUnaryMethod_Lookup<Service > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace sss
}  // namespace bbf


#endif  // GRPC_sssupsf_2eproto__INCLUDED
